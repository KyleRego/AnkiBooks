@using System.ComponentModel.DataAnnotations
@using AnkiBooks.Models;
@inject ILogger<LinkForm> Logger
@inject HttpClient Http

<div>
    <EditForm Model="Link" OnValidSubmit="SubmitForm" FormName="AddLinkForm">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="d-flex flex-row justify-content-around align-items-center">
            <label for="URL">Enter a source URL:</label>    
            <InputText @bind-Value="Link!.URL" class="flex-grow-1 m-2" id="URL" />

            <button class="btn btn-primary" type="submit">Submit link</button>
        </div>
    </EditForm>

    @if (urlAlreadyWasAdded)
    {
        <p>
            @lastAddedUrl was successfully added.
        </p>
    }
</div>

@code {
    // TODO: Do not hard code the backend origin
    private const string endpoint = "http://localhost:5229/api/Links";
    private bool urlAlreadyWasAdded = false;
    private string? lastAddedUrl;

    [SupplyParameterFromForm]
    public Link? Link { get; set; }

    protected override void OnInitialized() => Link ??= new Link();

    private async Task SubmitForm()
    {
        ArgumentNullException.ThrowIfNull(Link?.URL);

        Link linkData = new Link { URL = Link.URL, IsComplete = false };
        HttpResponseMessage response = await Http.PostAsJsonAsync(endpoint, linkData);

        response.EnsureSuccessStatusCode();

        urlAlreadyWasAdded = true;
        lastAddedUrl = Link.URL;
    }
}