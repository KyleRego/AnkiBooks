@using AnkiBooks.Models
@using AnkiBooks.Models.Enums

<div class="p-2">
    <Dropdown Split="true" class="@dropDownCssClass">
        <DropdownActionButton Color="ButtonColor.Primary">Add</DropdownActionButton>
        <DropdownToggleButton Color="ButtonColor.Primary" />
        <DropdownMenu>
            <DropdownItem Type="ButtonType.Button">Paragraph</DropdownItem>
            <DropdownItem Type="ButtonType.Button">Quote</DropdownItem>
            <DropdownItem Type="ButtonType.Button" @onclick="InsertNewBasicNoteForm">Basic Note</DropdownItem>
        </DropdownMenu>
    </Dropdown>
</div>

@if (dropDownItemWasSelected)
{
    @switch (dropDownItemSelected)
    {
        case ElementType.BasicNote:
            @* <AddElementDropdown @bind-Article:get="Article"
                                @bind-Article:set="ArticleChanged"
                                OrdinalPosition="@OrdinalPosition" /> *@

            <NewBasicNote @bind-Article:get="Article"
                        @bind-Article:set="ArticleChanged"
                        OrdinalPosition="@OrdinalPosition" />
            break;

        default:
            break;

    }
}

@code {
    [Parameter]
    public Article Article { get; set; } = null!;

    [Parameter]
    public EventCallback<Article> ArticleChanged { get; set; }

    [Parameter]
    public int OrdinalPosition { get; set; }

    private string dropDownCssClass = "";

    private bool dropDownItemWasSelected = false;

    private ElementType? dropDownItemSelected = null;

    private void InsertNewBasicNoteForm()
    {
        dropDownItemSelected = ElementType.BasicNote;
        ReplaceDropdown();
    }

    private void ReplaceDropdown()
    {
        dropDownCssClass = "d-none";
        dropDownItemWasSelected = true;
    }
}