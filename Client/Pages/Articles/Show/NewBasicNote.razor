@using System.ComponentModel.DataAnnotations
@using AnkiBooks.Models;
@inject ILogger<NewBasicNote> Logger
@inject HttpClient Http

<div>
    <EditForm Model="BasicNote" OnValidSubmit="SubmitForm" FormName="AddLinkForm">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div>
            <label for="Front">Front:</label>    
            <InputText @bind-Value="BasicNote!.Front" id="Front" />
        </div>

        <div>
            <label for="Back">Back:</label>
            <InputText @bind-Value="BasicNote.Back" id="Back" />
        </div>

        <div>
            <button class="btn btn-primary" type="submit">Create</button>
        </div>
    </EditForm>
</div>

@code {
    [Parameter]
    public Article? Article { get; set; }
    // TODO: Do not hard code the backend origin
    private const string endpoint = "http://localhost:5229/api/BasicNotes";

    [SupplyParameterFromForm]
    public BasicNote? BasicNote { get; set; }

    protected override void OnInitialized() => BasicNote ??= new() { ArticleId = Article!.Id };

    private async Task SubmitForm()
    {
        ArgumentNullException.ThrowIfNull(BasicNote);
        ArgumentNullException.ThrowIfNull(BasicNote.Front);
        ArgumentNullException.ThrowIfNull(BasicNote.Back);
        ArgumentNullException.ThrowIfNull(BasicNote.ArticleId);

        BasicNote data = new BasicNote
                            {
                                Front = BasicNote.Front,
                                Back = BasicNote.Back,
                                ArticleId = BasicNote.ArticleId
                            };
        HttpResponseMessage response = await Http.PostAsJsonAsync(endpoint, data);

        response.EnsureSuccessStatusCode();
    }
}