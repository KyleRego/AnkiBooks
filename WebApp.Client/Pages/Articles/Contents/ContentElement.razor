@using AnkiBooks.ApplicationCore.Entities
@using AnkiBooks.ApplicationCore.Interfaces
@using AnkiBooks.WebApp.Client.Pages.Articles.Notes
@using AnkiBooks.WebApp.Client.Pages.Articles.Contents
@using AnkiBooks.WebApp.Client.Pages.Articles.Contents.Markdown

@switch (Content)
{
    case MarkdownContent mdc:
        <ShowMarkdown   MarkdownContent="@mdc"
                        @bind-ElementsContainer:get="@ElementsContainer"
                        @bind-ElementsContainer:set="@ElementsContainerChanged" />
        break;

    default:
        break;
}

@code {
    [Parameter]
    public IContent Content { get; set; } = null!;

    [Parameter]
    public OrderedElementsContainer<ArticleElement> ElementsContainer { get; set; } = null!;
    
    [Parameter]
    public EventCallback<OrderedElementsContainer<ArticleElement>> ElementsContainerChanged { get; set; }

    [CascadingParameter(Name="ReadMode")]
    public bool ReadMode { get; set; }

}