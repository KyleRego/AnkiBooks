@using AnkiBooks.ApplicationCore.Entities

@using AnkiBooks.WebApp.Client.Pages.Articles.Elements.Decks.Cards.Basic
@using AnkiBooks.WebApp.Client.Pages.Articles.Elements.Decks.Cards.Cloze

@if (editingCard == true)
{
    switch(Card)
    {
        case BasicNote bn:
            <EditBasicNote InitialCard="@bn" @bind-EditingCard="editingCard" />
            break;

        case ClozeNote cn:
            <EditClozeNote InitialCard="@cn" @bind-EditingCard="editingCard" />
            break;
    }
}
else
{
    <div class="d-flex flex-row justify-content-start">
        <div class="w-5">
            @* This adds space to the left of the card, keeping it centered *@
        </div>
        <div>
            @switch(Card)
            {
                case BasicNote bn:
                    <DeckBasicNote BasicNote="@bn" AnswerRevealed="AnswerRevealed" />
                    break;

                case ClozeNote cn:
                    <DeckClozeNote ClozeNote="@cn" AnswerRevealed="AnswerRevealed" />
                    break;
            }
        </div>
        <div class="d-flex flex-column justify-content-start">
            <div role="button" title="Edit card" class="w-5 h-5" @onclick="StartEditing" >
                <Edit />
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public required Card Card { get; set; }

    [Parameter]
    public required bool AnswerRevealed { get; set; }

    [Parameter]
    public EventCallback<bool> AnswerRevealedChanged { get; set; }

    private bool editingCard;

    private void StartEditing() => editingCard = true;
}