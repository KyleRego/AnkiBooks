@using AnkiBooks.ApplicationCore.Entities
@using AnkiBooks.ApplicationCore.Interfaces
@using AnkiBooks.ApplicationCore.Services

@using AnkiBooks.WebApp.Client.Services
@using AnkiBooks.WebApp.Client.Pages.Articles.Elements

@inherits ArticleElementRootBase<MarkdownContent>

@if (Editing == true)
{
    <EditMarkdown InitialArticleElement="@ArticleElement" @bind-Editing="@Editing" />
}
else
{
<div    class="@(nestedDragLevels != 0 ? "dragover-highlight" : "")"
        @ondragenter="HandleDragEnter"
        @ondragenter:preventDefault
        ondragover="event.preventDefault();"
        @ondragleave="HandleDragLeave"
        @ondragleave:preventDefault
        @ondrop="HandleDrop">

    <div class="float-right">
        @if (showingOptions == false)
        {
            <div class="d-flex flex-row justify-content-start">
                <div class="w-5 h-5 mr-2" role="button" title="Edit markdown" @onclick="StartEditing">
                    <Edit />
                </div>

                <div role="button" class="w-5 h-5" title="Options" @onclick="ShowOptions">
                    <Gear />
                </div>
            </div>
        }
        else
        {
            <div class="position-relative top-4 right-4 px-2 border-primary">
                <ul>
                    <li class="my-2" @onclick="CancelShowingOptions">Cancel</li>
                    <li class="my-2" draggable="true" @ondrag="HandleDrag">Drag element</li>
                    <li class="my-2" @onclick="DeleteArticleElement">Delete markdown</li>
                </ul>
            </div>
        }
    </div>

    <RenderMarkdown Text="@ArticleElement.Text" />
</div>
}
