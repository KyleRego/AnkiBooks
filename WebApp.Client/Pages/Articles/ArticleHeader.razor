@using AnkiBooks.ApplicationCore.Entities
@using AnkiBooks.ApplicationCore.Services

@inject IArticleService ArticleService
@inject NavigationManager Navigation

<div class="m-4">
    @if (editing == true)
    {
        <EditTitle @bind-Article:get="@Article"
                            @bind-Article:set="@ArticleChanged"
                            @bind-EditingTitle="editing" />
    }
    else
    {
        <div class="d-flex justify-content-between align-items-center">
            <h1 class="font-size-3xl">
                @Article.Title
            </h1>

            @if (showingOptions == false)
            {
                <div class="d-flex flex-row justify-content-start">
                    <div class="w-5 h-5 mr-2" role="button" title="Edit markdown" @onclick="StartEditing">
                        <Edit />
                    </div>

                    <div role="button" class="w-5 h-5" title="Options" @onclick="ShowOptions">
                        <Gear />
                    </div>
                </div>
            }
            else
            {
                <div class="position-relative top-4 right-4 px-2 border-primary">
                    <ul>
                        <li class="my-2" @onclick="CancelShowingOptions">Cancel</li>
                        <li class="my-2" @onclick="DeleteArticle">Delete article</li>
                    </ul>
                </div>
            }
        </div>
    }
</div>

@code {
    [Parameter]
    public required Article Article { get; set; }

    [Parameter]
    public EventCallback<Article?> ArticleChanged { get; set; }

    protected override void OnParametersSet()
    {
        editing = false;
    }

    private bool editing = false;

    private void StartEditing()
    {
        editing = true;
    }

    private bool showingOptions = false;

    private void ShowOptions()
    {
        showingOptions = true;
    }

    private void CancelShowingOptions()
    {
        showingOptions = false;
    }

    private async Task DeleteArticle()
    {
        await ArticleService.DeleteArticle(Article.Id);
        Navigation.NavigateTo("articles");
    }
}