@using AnkiBooks.ApplicationCore.Entities

<div class="m-4">
    @if (editingTitle == true)
    {
        <EditTitle @bind-Article:get="@Article"
                            @bind-Article:set="@ArticleChanged"
                            @bind-EditingTitle="editingTitle" />
    }
    else
    {
        <div class="d-flex justify-content-between align-items-center">
            <div class="font-size-3xl pr-4">
                @Article.Title
            </div>

            <div class="d-flex flex-row justify-content-start">
                <div class="w-5 h-5 mr-2" role="button" title="Edit article title" @onclick="StartEditingTitle">
                    <Edit />
                </div>

                <div role="button" class="w-5 h-5" title="Options (TODO)">
                    <Gear />
                </div>
            </div>
        </div>
    }
</div>

<div class="px-4">
    <div class="mb-2">
        Sources:
    </div>
    <ul class="pl-8 list-style-outside list-style-type-disk">
        @foreach(Link l in Article.Links)
        {
            Link link = l;

            <li>
                <div class="d-flex flex-row align-items-center">
                    <div class="mr-2">
                        <ArticleLink @bind-Link="@link" />
                    </div>

                    <div role="button" class="w-5 h-5" title="Options (TODO)">
                        <Gear />
                    </div>
                </div>
            </li>
        }
    </ul>
</div>

<div class="px-4 my-2">
    @if (addingSource == false)
    {
        <div    role="button" @onclick="StartAddingSource"
                class="d-flex flex-row justify-content-start align-items-center">
            <div class="w-4 h-4"><Plus /></div>
            <div class="pl-2">New link</div>
        </div>
    }
    else
    {
        <NewArticleLink @bind-Article:get="@Article" @bind-Article:set="ArticleChanged" @bind-AddingSource="@addingSource" />
    }
</div>

@code {
    [Parameter]
    public Article Article { get; set; } = null!;

    [Parameter]
    public EventCallback<Article?> ArticleChanged { get; set; }

    protected override void OnParametersSet()
    {
        editingTitle = false;
        addingSource = false;
    }

    private bool editingTitle = false;

    private void StartEditingTitle()
    {
        editingTitle = true;
    }

    private bool addingSource = false;

    private void StartAddingSource()
    {
        addingSource = true;
    }
}