@inherits ChangesOrderedElementsContainerBase
@using AnkiBooks.ApplicationCore.Entities
@using AnkiBooks.ApplicationCore.Enums
@using AnkiBooks.ApplicationCore.Interfaces
@using AnkiBooks.WebApp.Client.Pages.Articles.Show.BasicNoteComponents
@using AnkiBooks.WebApp.Client.Pages.Articles.Show.ClozeNoteComponents
@using AnkiBooks.WebApp.Client.Pages.Articles.Show.MarkdownContentComponents

@if (dropDownItemSelected == null)
{
     <div class="my-2 d-flex justify-content-center">
        <label>
            New element:
            <InputSelect @bind-Value="dropDownItemSelected">
                <option value=""></option>
                <option value="@ElementType.BasicNote">Basic note</option>
                <option value="@ElementType.ClozeNote">Cloze note</option>
                <option value="@ElementType.MarkdownContent">Markdown Content</option>
            </InputSelect>
        </label>
    </div>
}
else
{
    @switch (dropDownItemSelected)
    {
        case ElementType.BasicNote:
            <NewBasicNote   @bind-OrderedElementsContainer:get="OrderedElementsContainer"
                            @bind-OrderedElementsContainer:set="OrderedElementsContainerChanged"
                            @bind-DropDownItemSelected="dropDownItemSelected"
                            PairedElement="@PairedElement" />
            break;
        case ElementType.ClozeNote:
            <NewClozeNote   @bind-OrderedElementsContainer:get="OrderedElementsContainer"
                            @bind-OrderedElementsContainer:set="OrderedElementsContainerChanged"
                            @bind-DropDownItemSelected="dropDownItemSelected"
                            PairedElement="@PairedElement" />
            break;

        case ElementType.MarkdownContent:
            <NewMarkdownContent @bind-OrderedElementsContainer:get="OrderedElementsContainer"
                                @bind-OrderedElementsContainer:set="OrderedElementsContainerChanged"
                                @bind-DropDownItemSelected="dropDownItemSelected"
                                PairedElement="@PairedElement" />
            break;
        default:
            break;

    }
}

@code {
    [Parameter]
    public IArticleElement? PairedElement { get; set; }

    private ElementType? dropDownItemSelected = null;
}