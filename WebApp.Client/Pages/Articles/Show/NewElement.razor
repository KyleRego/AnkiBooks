@using AnkiBooks.ApplicationCore.Entities
@using AnkiBooks.ApplicationCore.Enums
@using AnkiBooks.ApplicationCore.Interfaces
@using AnkiBooks.WebApp.Client.Pages.Articles.Show.Notes.Basic
@using AnkiBooks.WebApp.Client.Pages.Articles.Show.Notes.Cloze
@using AnkiBooks.WebApp.Client.Pages.Articles.Show.Contents.Markdown

@if (dropDownItemSelected == null)
{
    <div class="mb-4 d-flex justify-content-center">
        <InputSelect @bind-Value="dropDownItemSelected" name="new-element">
            <option value="" selected>New element</option>
            <option value="@ArticleElementType.BasicNote">Basic note</option>
            <option value="@ArticleElementType.ClozeNote">Cloze note</option>
            <option value="@ArticleElementType.MarkdownContent">Markdown</option>
        </InputSelect>
    </div>
}
else
{
    @switch (dropDownItemSelected)
    {
        case ArticleElementType.BasicNote:
            <NewBasicNote   @bind-ElementsContainer:get="ElementsContainer"
                            @bind-ElementsContainer:set="ElementsContainerChanged"
                            @bind-DropDownItemSelected="dropDownItemSelected"
                            OrdinalPosition="@OrdinalPosition" />
            break;
        case ArticleElementType.ClozeNote:
            <NewClozeNote   @bind-ElementsContainer:get="ElementsContainer"
                            @bind-ElementsContainer:set="ElementsContainerChanged"
                            @bind-DropDownItemSelected="dropDownItemSelected"
                            OrdinalPosition="@OrdinalPosition" />
            break;

        case ArticleElementType.MarkdownContent:
            <NewMarkdown    @bind-ElementsContainer:get="ElementsContainer"
                            @bind-ElementsContainer:set="ElementsContainerChanged"
                            @bind-DropDownItemSelected="dropDownItemSelected"
                            OrdinalPosition="@OrdinalPosition" />
            break;

        default:
            break;

    }
}

@code {
    [Parameter]
    public OrderedElementsContainer<ArticleElement> ElementsContainer { get; set; } = null!;

    [Parameter]
    public EventCallback<OrderedElementsContainer<ArticleElement>> ElementsContainerChanged { get; set; }

    [Parameter]
    public int OrdinalPosition { get; set; }

    private ArticleElementType? dropDownItemSelected = null;
}