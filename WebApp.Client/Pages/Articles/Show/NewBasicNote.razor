@inherits AddElementBase
@using System.ComponentModel.DataAnnotations
@using System.Text.Json
@using AnkiBooks.ApplicationCore.Entities
@using AnkiBooks.ApplicationCore.Interfaces
@inject ILogger<NewBasicNote> Logger
@inject IAnkiBooksApiService ApiService

<div class="d-flex justify-content-center my-2">
    <RadzenCard Variant="Variant.Outlined" Style="width: 32rem">
        <EditForm Model="BasicNote" OnValidSubmit="SubmitForm">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <RadzenStack Gap="10">
                <RadzenTextArea @bind-Value="BasicNote!.Front" id="Front" />
                
                <RadzenTextArea @bind-Value="BasicNote.Back" id="Back" />
        
                <div class="d-flex justify-content-center">
                    <RadzenButton type="submit" Text="Create" Variant="Variant.Outlined" Size="ButtonSize.Small" />
                </div>
            </RadzenStack>
        </EditForm>
    </RadzenCard>
</div>

@code {
    [Parameter]
    public bool HideSplitButtonAndShowForm { get; set; }

    [Parameter]
    public EventCallback<bool> HideSplitButtonAndShowFormChanged { get; set; }

    [SupplyParameterFromForm]
    public BasicNote? BasicNote { get; set; }

    protected override void OnInitialized()
    {
        // Set ArticleId here so that the form can be submitted (otherwise it is not valid)
        BasicNote = new()
        {
            ArticleId = ArticleId
        };
    }

    private async Task SubmitForm()
    {
        ArgumentNullException.ThrowIfNull(BasicNote);
        ArgumentNullException.ThrowIfNull(BasicNote.Front);
        ArgumentNullException.ThrowIfNull(BasicNote.Back);
        ArgumentNullException.ThrowIfNull(ArticleId);

        int ordinalPosition = (PairedElement != null) ? 
                                    OrderedElementsContainer.GetOrdinalPosition(PairedElement) : 
                                    OrderedElementsContainer.Count();
        
        BasicNote bnData = new BasicNote
            {
                Front = BasicNote.Front,
                Back = BasicNote.Back,
                ArticleId = ArticleId,
                OrdinalPosition = ordinalPosition
            };
        BasicNote? basicNote = await ApiService.PostBasicNote(bnData);
        ArgumentNullException.ThrowIfNull(basicNote);

        OrderedElementsContainer.Add(basicNote);
        await OrderedElementsContainerChanged.InvokeAsync(OrderedElementsContainer);

        HideSplitButtonAndShowForm = false;
        await HideSplitButtonAndShowFormChanged.InvokeAsync(HideSplitButtonAndShowForm);
    }
}