@inherits ChangesOrderedElementsContainerBase
@using System.ComponentModel.DataAnnotations
@using System.Text.Json
@using AnkiBooks.ApplicationCore.Entities
@using AnkiBooks.ApplicationCore.Enums
@using AnkiBooks.ApplicationCore.Interfaces
@inject ILogger<NewMarkdownContent> Logger
@inject IAnkiBooksApiService ApiService

<MarkdownContentForm  StartingContent="@StartingMarkdownContent"
                EditingExisting="true"
                ParentSubmitMethod="@SubmitForm" />

@code {
    [Parameter]
    public MarkdownContent StartingMarkdownContent { get; set; } = null!;

    [Parameter]
    public bool Editing { get; set; }

    [Parameter]
    public EventCallback<bool> EditingChanged { get; set; }

    [Parameter]
    public IArticleElement? PairedElement { get; set; }

    [Parameter]
    public ElementType? DropDownItemSelected { get; set; }

    [Parameter]
    public EventCallback<ElementType?> DropDownItemSelectedChanged { get; set; }

    private async Task SubmitForm(MarkdownContent newContent)
    {
        ArgumentNullException.ThrowIfNull(newContent.Text);
        MarkdownContent? createdContent = (MarkdownContent?)await ApiService.PutArticleElement(newContent);
        ArgumentNullException.ThrowIfNull(createdContent);

        Editing = false;
        await EditingChanged.InvokeAsync(Editing);
    }
}