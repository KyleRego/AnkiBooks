@using AnkiBooks.ApplicationCore.Entities
@inherits ChangesOrderedElementsContainerBase
@inject IAnkiBooksApiService ApiService

@if (editing == false)
{
    <div class="my-2 d-flex">

        <div class="d-flex flex-column justify-content-around">
            <div class="p-2" role="button" @onclick="BeginEditing">
                EDIT
            </div>
        </div>

        <div class="flex-grow-1">
            <FlippableElement ArticleElement="@ArticleElement" />
        </div>

        <div class="d-flex flex-column justify-content-around">
            <div class="p-2" role="button" @onclick="DeleteElement">
                DELETE
            </div>
        </div>
        
    </div>
}
else
{
    <EditElement ArticleElement="@ArticleElement" @bind-Editing="@editing" />
}

@code {
    [Parameter]
    public ArticleElementBase ArticleElement { get; set; } = null!;

    private bool editing = false;

    private void BeginEditing()
    {
        editing = true;
    }

    private async Task DeleteElement()
    {
        if (ArticleElement is BasicNote)
        {
            await ApiService.DeleteBasicNote(ArticleElement.Id);
        }

        OrderedElementsContainer.Remove(ArticleElement);
        await OrderedElementsContainerChanged.InvokeAsync(OrderedElementsContainer);
    }
}