@using System.Text.Json
@using AnkiBooks.ApplicationCore.Entities
@inject IAnkiBooksApiService ApiService
@inject NavigationManager Navigation
@inject IConfiguration Config
@inject ILogger<New> Logger
@inject DialogService DialogService

<div>
    <EditForm   Model="Article"
                OnValidSubmit="SubmitForm"
                OnInvalidSubmit="LogInvalidSubmit"
                FormName="NewArticle">

        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <RadzenText for="article-title">Title:</RadzenText>
            <RadzenTextBox @bind-Value="Article!.Title" id="article-title" class="w-100" />
        </div>

        <RadzenButton Text="Create" Type="ButtonType.Submit" />

    </EditForm>
</div>

@code {
    protected override void OnInitialized()
    {
        Article ??= new("");
    }

    [SupplyParameterFromForm]
    private Article? Article { get; set; }

    private async Task SubmitForm()
    {
        ArgumentNullException.ThrowIfNull(Article);
        ArgumentNullException.ThrowIfNullOrWhiteSpace(Article.Title);

        Article? article = await ApiService.PostArticle(Article);
        ArgumentNullException.ThrowIfNull(article);

        Navigation.NavigateTo($"articles/{article.Id}");
    }

    private void LogInvalidSubmit()
    {
        Logger.LogInformation("it was invalid");
    }
}