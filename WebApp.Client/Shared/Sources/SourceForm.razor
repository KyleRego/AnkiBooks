@using AnkiBooks.ApplicationCore.Entities

<div class="border-color-primary border-width-thin border-style-solid px-2 py-1">
    <EditForm Model="FormLink" OnValidSubmit="HandleValidSubmit">
        <div class="d-flex justify-content-center">
            <DataAnnotationsValidator />
            <ValidationSummary />
        </div>

        <div class="d-flex justify-content-end">
            <button type="button" @onclick="Cancel">
                Cancel
            </button>
        </div>

        <div class="mt-1 d-flex align-items-center">
            <label class="mr-4">URL:</label>
            <InputText class="flex-grow-1" @bind-Value="FormLink.Url" />
        </div>

        <div class="mt-2 d-flex align-items-center">
            <label class="mr-4">Name:</label
            <InputText class="flex-grow-1" @bind-Value="FormLink.Name" />
        </div>

        <div class="mt-1 d-flex justify-content-center">
            <button type="submit" title="@SubmitButtonText()">
                @SubmitButtonText()
            </button>
        </div>
    
    </EditForm>
</div>

@code {
    [Parameter]
    public bool EditingExisting { get; set; }

    [Parameter]
    public required Link StartingLink { get; set; }

    [SupplyParameterFromForm]
    public required Link FormLink { get; set; }

    protected override void OnInitialized()
    {
        FormLink = StartingLink;
    }

    [Parameter]
    public required Func<Link, Task> ParentSubmitMethod { get; set; }

    [Parameter]
    public required Func<Task> ParentCancelMethod { get; set; }

    private async Task HandleValidSubmit()
    {
        await ParentSubmitMethod.Invoke(FormLink);
    }

    private async Task Cancel()
    {
        await ParentCancelMethod.Invoke();
    }

    private string SubmitButtonText()
    {
        return EditingExisting ? "Update source" : "Create source";
    }
}